TDA Gobot Thingies!!! (TM)(SM)(C)(FU)

Built with Python 3.8.5. No idea if it works with older Python versions.

# Required standard Python modules
os, sys, time, datetime, pytz, dotenv, pickle, json, asyncio, signal, re, random, itertools, subprocess, fcntl, collections, argparse

# Other required modules
robin_stocks
tda_api
tulipy
talib
pandas
pandas_datareader
numpy
func_timeout


# Bots and Things:

 - tda-gobot.py: Original gobot, still useful for buying individual stocks and monitoring stoploss. Also supports
   entrance and exit prices.

 - tda-rsi-gobot.py: Deprecated - original RSI/StochRSI gobot, monitors a single stock at a time.

 - tda-gobot-v2.py: New gobot that uses TDA's streaming API. It can monitor a few or hundreds of stock
   tickers at one time. Supports multiple secondary indicators and exit strategies.

 - tda-gapcheck.py: This gobot uses TDA's streaming API and monitors stocks for sudden gap up/down. It can
   monitor and enter trades to take advantage of sudden spikes/drops in stock price.

# Utilities
 - tda-sell-stock.py: Easily sell all owned shares of a single ticker, or dump all shares of all tickers very quickly.
   I use this one a lot.

 - tda-quote-stock.py: Contains lots of functions. Without any arguments just obtains quote information about a ticker.
   It can also blacklist stocks and provide a bunch of other random information. Use --pretty for nicer output.

# Modules
 - tda_gobot_helper.py: Most of the scripts use this helper module, contains functions for all standard
   tda API operations.

 - tda_gobotv2_helper.py: Implements much of the algorithm used by tda-gobot-v2.py

 - tda_cndl_helper.py: Used by tda-cndl-indicators-analyze.py

# Testing
 - tda-gobot-analyze.py: Main test application to back test algorithms in tda-rsi-gobot.py and tda-gobot-v2.py.
   Much of the algorithm is contained in tda_gobot_helper.py.

 - tda-gapcheck-analyze.py: Tool to backtest tda-gapcheck.py algorithm.

 - tda-cndl-indicators-analyze.py: Test script to analyze candle patterns.

 - gobot-test.py: Script to automate a bunch of various test scenarios. Runs tda-gobot-analyze.py in the background.

 - stock-analyze: There are various scripts and things in this directory that are used for testing or parsing results.

# Other
 - tda-monitor.sh: shell script for monitoring gobot transactions and estimating returns.


Most bots and utilities support a --help flag to obtain usage information.

# EXAMPLES

## Sell a single ticker

	$ tda-sell-stock.py MSFT

## Sell entire portfolio quickly

	$ tda-sell-stock.py --panic --force

## Query information about a ticker

	$ tda-quote-stock.py MSFT --pretty

## Purchase $1000 USD of a stock with a 0.5% stoploss and exit:

	$ tda-gobot.py MSFT 1000 --decr_threshold=0.5

## Short sell $1000 USD of a stock and watch for stoploss and exit

	$ tda-gobot.py MSFT 1000 --short --decr_threshold=0.5

## Run tda-gobot-v2.py

	$ source stock-analyze/tickers.conf
	$ ./tda-gobot-v2.py --stoploss --stock_usd=5000 --short --stocks=$SMALL_MID3 \
		--decr_threshold=0.4 --incr_threshold=0.5 --max_failed_txs=1 --exit_percent=0.2 --tx_log_dir=TX_LOGS_v2 \
		--no_use_resistance --rsi_high_limit=95 --rsi_low_limit=5 --vpt_sma_period=72 \
		--algos=stochrsi,rsi,macd --algos=stochrsi,adx,vpt --algos=stochrsi,rsi,adx,vpt --algos=stochrsi,rsi,aroonosc,vpt

## HINTS:

 - The bots should all support a '--fake' parameter for paper trading. Implements all functions and monitors buys/sells, but
   does not actually call the buy/sell/short/buy-to-cover TDA APIs.

